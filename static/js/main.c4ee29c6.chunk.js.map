{"version":3,"sources":["components/tournmentGames.js","index.tsx"],"names":["TournmentGames","useState","items","setItems","sorted","reversed","setSorted","searchPhrase","setSearchPhrase","useEffect","fetch","then","response","json","className","type","placeholder","value","onChange","event","matchedItems","filter","item","tournament","name","toLowerCase","includes","target","onClick","itemsCopy","sort","a","b","titleA","title","titleB","localeCompare","map","date","Date","startTime","toLocaleString","console","log","key","id","teams","team","width","src","logoUrl","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGe,SAASA,IACpB,IACA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,CAAEG,OAAQ,KAAMC,UAAU,IAA/D,mBAAOD,EAAP,KAAeE,EAAf,KACH,EAAwCL,mBAAS,IAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAGGC,qBAAU,WACNC,MAPW,gCAQNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIV,EAASU,QAC5B,IAqFH,OACI,6BAASC,UAAU,kBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,0BACX,qDACA,2BACIC,KAAK,OACLC,YAAY,uBACZC,MAAOV,EACPW,SA7DL,SAACC,GAEZ,IAAMC,EAAelB,EAAMmB,QAAO,SAACC,GAC/B,MAAO,UAAGA,EAAKC,WAAWC,MACrBC,cACAC,SAASP,EAAMQ,OAAOV,MAAMQ,kBAGrCtB,EAASiB,GAETZ,EAAgBW,EAAMQ,OAAOV,WAsDrB,yBAAKH,UAAU,wBAEf,4BAAQc,QAjGA,WAEhB,IAAMC,EAAS,YAAO3B,GAGtB2B,EAAUC,MAAK,SAACC,EAAGC,GACf,IAAMC,EAASF,EAAEG,MACXC,EAASH,EAAEE,MAC1B,OAAI9B,EAAOC,SAES4B,EAAOG,cAAcD,GAGzBA,EAAOC,cAAcH,MAGhC9B,EAAS0B,GAGfvB,EAAU,CAAEF,OAAQ,QAASC,UAAWD,EAAOC,aA8EjC,SAAwD,UAAlBD,EAAOA,OA1EvDA,EAAOC,SAEH,kBAAC,IAAD,MAGD,kBAAC,IAAD,MAqEyF,KAAlF,KACI,yBAAKS,UAAU,QAAf,QACA,yBAAKA,UAAU,SAAQ,wCAAmB,yCAC1C,yBAAKA,UAAU,cAAf,cAEJ,yBAAKA,UAAU,wBAxDnB,wBAAIA,UAAU,QAERZ,EAAMmC,KAAI,SAAAf,GACR,IAAMgB,EAAO,IAAIC,KAAKjB,EAAKkB,WAAWC,iBAEtC,OADAC,QAAQC,IAAIL,GACL,wBAAIM,IAAKtB,EAAKuB,IACjB,wBAAI/B,UAAU,SACV,wBAAIA,UAAU,SAASQ,EAAKY,OAC5B,wBAAIpB,UAAU,QAAQwB,GACtB,wBAAIxB,UAAU,SAENQ,EAAKwB,MAAMT,KAAI,SAAAU,GAEX,OACI,wBAAIH,IAAKG,EAAKF,GAAI/B,UAAU,YACxB,wBAAIA,UAAU,QACTiC,EAAKvB,MAEV,wBAAIV,UAAU,QACV,yBAAKkC,MAAM,KAAKC,IAAKF,EAAKG,QAASC,IAAI,eAE3C,wBAAIrC,UAAU,SAAd,UAQpB,wBAAIA,UAAU,cAAcQ,EAAKC,WAAWC,e,MCtFxE4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACtD,EAAD,OAEFuD,SAASC,eAAe,U","file":"static/js/main.c4ee29c6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { FaArrowUp, FaArrowDown } from \"react-icons/fa\";\n\nexport default function TournmentGames() {\n    const apiURL = \"http://localhost:3001/series\";\n    const [items, setItems] = useState([]);\n    const [sorted, setSorted] = useState({ sorted: \"id\", reversed: false });\n\tconst [searchPhrase, setSearchPhrase] = useState(\"\");\n    \n    // Run on load\n    useEffect(() => {\n        fetch(apiURL)\n            .then(response => response.json())\n            .then(json => setItems(json))\n    }, [])\n\n    const sortByTitle = () => {\n        // Make copy of array before editing\n        const itemsCopy = [...items]\n\n        // Sort items array\n        itemsCopy.sort((a, b) => {\n            const titleA = a.title\n            const titleB = b.title\n\t\t\tif (sorted.reversed) {\n                // Sort by alphabet DESC\n                return titleA.localeCompare(titleB)\n            }\n            // Sort by alphabet ASC\n            return titleB.localeCompare(titleA)\n        });\n        // set items to new state\n        setItems(itemsCopy);\n\n        // Set sorted state\n\t\tsetSorted({ sorted: \"title\", reversed: !sorted.reversed });\n    }\n\n    const renderArrow = () => {\n\t\tif (sorted.reversed) {\n            // if ASC show up arrow\n\t\t\treturn <FaArrowUp />;\n\t\t}\n        // if DESC show up arrow\n\t\treturn <FaArrowDown />;\n\t};\n\n    const search = (event) => {\n        // Set var to return matched items\n        const matchedItems = items.filter((item) => {\n            return `${item.tournament.name}`\n                .toLowerCase()\n                .includes(event.target.value.toLowerCase());\n        });\n        // send updated match to state\n        setItems(matchedItems);\n        // Update search term shown\n        setSearchPhrase(event.target.value);\n    };\n\n    const renderList = () => {\n        return (\n            <ul className=\"list\">\n                {/* Loop through items/ games */}\n                { items.map(item => {\n                    const date = new Date(item.startTime).toLocaleString();\n                    console.log(date);\n                    return <li key={item.id}>\n                        <ul className=\"items\">\n                            <li className=\"title\">{item.title}</li>\n                            <li className=\"time\">{date}</li>\n                            <li className=\"teams\">\n                                {\n                                    item.teams.map(team => {\n                                            /* Loop through teams */\n                                        return (\n                                            <ul key={team.id} className=\"teamItem\">\n                                                <li className=\"name\">\n                                                    {team.name}\n                                                </li>\n                                                <li className=\"logo\">\n                                                    <img width=\"35\" src={team.logoUrl} alt=\"team logo\" />\n                                                </li>\n                                                <li className=\"score\">\n                                                    0\n                                                </li>\n                                            </ul>\n                                        )\n                                    })\n                                }\n                            </li>\n                            <li className=\"tournament\">{item.tournament.name}</li>\n                        </ul>\n                    </li>\n                })}\n            </ul>\n        )\n    }\n\n    return (\n        <section className=\"tournmentGames\">\n            <div className=\"container\">\n                <div className=\"listSection listSearch\">\n                    <label>Tournment Search: </label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search Tournments...\"\n                        value={searchPhrase}\n                        onChange={search}\n                    />\n                </div>\n                <div className=\"listSection listHead\">\n                {/* <button onClick={ () => setItems( ...items.sort((a, b) => a.title.localeCompare(b.title))) }>Title</button> */}\n                <button onClick={sortByTitle}>Title { sorted.sorted === \"title\" ? renderArrow() : null} </button>\n                    <div className=\"time\">Time</div>\n                    <div className=\"teams\"><span>Team 1</span><span>Team 2</span></div>\n                    <div className=\"tournments\">Tournment</div>\n                </div>\n                <div className=\"listSection listBody\">\n                    {renderList()}\n                </div>\n            </div>\n        </section>\n    )\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TournmentGames from \"./components/tournmentGames\";\nimport './app.css'; // Import css modules stylesheet as styles\n\nReactDOM.render(\n  <React.StrictMode>\n    <TournmentGames />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}